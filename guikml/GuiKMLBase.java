package guikml;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class GuiKMLBase extends javax.swing.JFrame {

    /**
     * Creates new form GuiKMLBase
     */
    public static String FolderPath="";
    public static String FilteredPath="";
    public static ArrayList<Container> toFilter = new ArrayList<Container>();
    public static ArrayList<Container> Filtered2 = new ArrayList<Container>();
    public static ArrayList<Container> Cont = new ArrayList<Container>();
    public GuiKMLBase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        Folder = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        SaveLoc = new javax.swing.JTextField();
        KML = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        Devices = new javax.swing.JTextField();
        Groups = new javax.swing.JTextField();
        FilteredBy = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        DeviceFilter = new javax.swing.JTextField();
        LatFilter = new javax.swing.JTextField();
        ETimeFilter = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        BDateFilter = new javax.swing.JTextField();
        LonFilter = new javax.swing.JTextField();
        AltFilter = new javax.swing.JTextField();
        RadiusFilter = new javax.swing.JTextField();
        DeviceFilterBottun = new javax.swing.JButton();
        DateFilterBottun = new javax.swing.JButton();
        LocationFilterBottun = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        FilteredFile = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        BTimeFilter = new javax.swing.JTextField();
        EDateFilter = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        test = new javax.swing.JTextField();
        test2 = new javax.swing.JTextField();
        DeviceFilterBottun1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        SaveLoc2 = new javax.swing.JTextField();
        KML2 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        Devices1 = new javax.swing.JTextField();
        Groups1 = new javax.swing.JTextField();
        FilteredBy1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        DateFilterBottun1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        SaveLoc4 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        test1 = new javax.swing.JTextField();
        test3 = new javax.swing.JTextField();
        DeviceFilterBottun2 = new javax.swing.JButton();
        MAC2 = new javax.swing.JTextField();
        MAC1 = new javax.swing.JTextField();
        MAC3 = new javax.swing.JTextField();
        DeviceFilterBottun3 = new javax.swing.JButton();
        SIGNAL1 = new javax.swing.JTextField();
        SIGNAL2 = new javax.swing.JTextField();
        SIGNAL3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        MAC4 = new javax.swing.JTextField();
        Filter = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Folder.setText("Folder path");
        Folder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FolderActionPerformed(evt);
            }
        });

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Welcome to the Nimbus 2000");

        jLabel2.setText("Please insert folder path (WigleWifi Format)");

        jButton3.setText("Clear Database");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Save as...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        SaveLoc.setText("Save as CSV");
        SaveLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveLocActionPerformed(evt);
            }
        });

        KML.setText("Save as KML");
        KML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KMLActionPerformed(evt);
            }
        });

        jButton5.setText("Save as...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        Devices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DevicesActionPerformed(evt);
            }
        });

        Groups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GroupsActionPerformed(evt);
            }
        });

        FilteredBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilteredByActionPerformed(evt);
            }
        });

        jLabel6.setText("Num of Devices");

        jLabel7.setText("Num of groups");

        jLabel8.setText("Filtered By");

        jLabel9.setText("Save Filtered file at :");

        DeviceFilter.setText("Device");
        DeviceFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeviceFilterActionPerformed(evt);
            }
        });

        LatFilter.setText("Lat");
        LatFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LatFilterActionPerformed(evt);
            }
        });

        ETimeFilter.setText("End Time");
        ETimeFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ETimeFilterActionPerformed(evt);
            }
        });

        jLabel10.setText("Filter By Device");

        jLabel11.setText("Filtered by Location");

        jLabel12.setText("Filter By Date");

        BDateFilter.setText("Begin Date");
        BDateFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDateFilterActionPerformed(evt);
            }
        });

        LonFilter.setText("Lon");
        LonFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LonFilterActionPerformed(evt);
            }
        });

        AltFilter.setText("Alt");
        AltFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltFilterActionPerformed(evt);
            }
        });

        RadiusFilter.setText("Radius");
        RadiusFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadiusFilterActionPerformed(evt);
            }
        });

        DeviceFilterBottun.setText("Confirm");
        DeviceFilterBottun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeviceFilterBottunActionPerformed(evt);
            }
        });

        DateFilterBottun.setText("Confirm");
        DateFilterBottun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateFilterBottunActionPerformed(evt);
            }
        });

        LocationFilterBottun.setText("Confirm");
        LocationFilterBottun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationFilterBottunActionPerformed(evt);
            }
        });

        jLabel3.setText("Please insert file path (Filtered Format) (Max 46 groups)");

        FilteredFile.setText("Filtered file path (.csv format)");
        FilteredFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilteredFileActionPerformed(evt);
            }
        });

        jButton13.setText("Confirm");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        BTimeFilter.setText("Begin Time");
        BTimeFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTimeFilterActionPerformed(evt);
            }
        });

        EDateFilter.setText("End Date");
        EDateFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDateFilterActionPerformed(evt);
            }
        });

        jLabel13.setText("Algorithm 1");

        test.setText("MAC");
        test.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testActionPerformed(evt);
            }
        });

        test2.setText("Output");
        test2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test2ActionPerformed(evt);
            }
        });

        DeviceFilterBottun1.setText("Confirm");
        DeviceFilterBottun1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeviceFilterBottun1ActionPerformed(evt);
            }
        });

        jButton6.setText("Save as...");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        SaveLoc2.setText("Save as CSV");
        SaveLoc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveLoc2ActionPerformed(evt);
            }
        });

        KML2.setText("Save as KML");
        KML2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KML2ActionPerformed(evt);
            }
        });

        jButton7.setText("Save as...");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        Devices1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Devices1ActionPerformed(evt);
            }
        });

        Groups1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Groups1ActionPerformed(evt);
            }
        });

        FilteredBy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilteredBy1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Num of Devices");

        jLabel15.setText("Num of groups");

        jLabel16.setText("Filtered By");

        jLabel17.setText("Save Filtered file at :");

        DateFilterBottun1.setText("Clear Filter");
        DateFilterBottun1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateFilterBottun1ActionPerformed(evt);
            }
        });

        jLabel18.setText("Upload Filter");

        SaveLoc4.setText("Filter file path (.csv format)");
        SaveLoc4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveLoc4ActionPerformed(evt);
            }
        });

        jButton8.setText("Upload");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel19.setText("Algorithm 2");

        test1.setText("Scanner");
        test1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test1ActionPerformed(evt);
            }
        });

        test3.setText("Output");
        test3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test3ActionPerformed(evt);
            }
        });

        DeviceFilterBottun2.setText("Confirm");
        DeviceFilterBottun2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeviceFilterBottun2ActionPerformed(evt);
            }
        });

        MAC2.setText("MAC");
        MAC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAC2ActionPerformed(evt);
            }
        });

        MAC1.setText("MAC");
        MAC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAC1ActionPerformed(evt);
            }
        });

        MAC3.setText("MAC");
        MAC3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAC3ActionPerformed(evt);
            }
        });

        DeviceFilterBottun3.setText("Confirm");
        DeviceFilterBottun3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeviceFilterBottun3ActionPerformed(evt);
            }
        });

        SIGNAL1.setText("Signal");
        SIGNAL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGNAL1ActionPerformed(evt);
            }
        });

        SIGNAL2.setText("Signal");
        SIGNAL2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGNAL2ActionPerformed(evt);
            }
        });

        SIGNAL3.setText("Signal");
        SIGNAL3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGNAL3ActionPerformed(evt);
            }
        });

        jLabel20.setText("Algorithm 2");

        MAC4.setText("Output");
        MAC4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAC4ActionPerformed(evt);
            }
        });

        Filter.setText("Filter");

        jLabel21.setText("and , or , not.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Devices, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(Groups, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(FilteredBy, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SaveLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(KML, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BTimeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ETimeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LatFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LonFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AltFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RadiusFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(DeviceFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DeviceFilterBottun)
                                    .addComponent(LocationFilterBottun)
                                    .addComponent(DateFilterBottun))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(Folder, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addComponent(jButton13))
                            .addComponent(jLabel3)
                            .addComponent(FilteredFile, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(MAC1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MAC2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MAC3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(DeviceFilterBottun3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(DateFilterBottun1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(SIGNAL1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addGap(33, 33, 33)
                                                .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(test2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(DeviceFilterBottun1))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(test3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(DeviceFilterBottun2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(SIGNAL2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(SIGNAL3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(MAC4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Devices1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Groups1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(FilteredBy1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(SaveLoc4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(SaveLoc2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(KML2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton3))
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Folder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FilteredFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Devices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Groups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FilteredBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(SaveLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(jLabel9))
                .addGap(11, 11, 11)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeviceFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeviceFilterBottun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTimeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ETimeFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateFilterBottun)
                    .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LatFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LonFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AltFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RadiusFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LocationFilterBottun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DateFilterBottun1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6)
                        .addComponent(KML2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7)
                        .addComponent(SaveLoc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(SaveLoc4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Groups1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FilteredBy1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(Devices1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(test2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeviceFilterBottun1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(test3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeviceFilterBottun2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SIGNAL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SIGNAL2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SIGNAL3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(MAC4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MAC2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MAC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MAC3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeviceFilterBottun3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FolderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String FilterWord = "Wigle";
        FolderPath = Folder.getText();
        FolderReader Check = new FolderReader(FolderPath,FilterWord);
        File File = new File(Check.getFinalArray());
	ListFile Filtered = new ListFile(File.getContain().get(0),"SIGNAL",10);
       /* Devices.setText(File.getDevicescount()+"");
        Groups.setText(Filtered.getContainerMAC().size()+"");
        FilteredBy.setText("Top10Signal");*/
        toFilter.addAll(Filtered.getContainerMAC());
        Filtered2.addAll(Filtered.getContainerMAC());
        RdyToPrint Exam = new RdyToPrint(toFilter,1);
        FileFiltered Exam2 = new FileFiltered(Exam.getTOPRINT());
        Devices.setText(Exam2.getDevicescount()+"");
        Groups.setText(toFilter.size()+"");
        FilteredBy.setText("Top10Signal");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        toFilter.clear();
        Groups.setText(toFilter.size()+"");
        Devices.setText("0");
        FilteredBy.setText("Null");
        FolderPath = "";
        FilteredPath = "";
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String Save = "";
        Save = SaveLoc.getText();
        RdyToPrint Printing = new RdyToPrint(toFilter,1);
        Writer FilteredFirst = new Writer(Save,Printing.getTOPRINT());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void SaveLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveLocActionPerformed

    private void KMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KMLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KMLActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Kml3 b = new Kml3 (toFilter,KML.getText());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void DevicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DevicesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DevicesActionPerformed

    private void GroupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GroupsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GroupsActionPerformed

    private void FilteredByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilteredByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilteredByActionPerformed

    private void DeviceFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeviceFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeviceFilterActionPerformed

    private void LatFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LatFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LatFilterActionPerformed

    private void ETimeFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ETimeFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ETimeFilterActionPerformed

    private void BDateFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDateFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BDateFilterActionPerformed

    private void LonFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LonFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LonFilterActionPerformed

    private void AltFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AltFilterActionPerformed

    private void RadiusFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadiusFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadiusFilterActionPerformed

    private void DeviceFilterBottunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeviceFilterBottunActionPerformed
        // TODO add your handling code here:
        InputFilterGui test = new InputFilterGui ("","","","",-1,-1,-1,-1,DeviceFilter.getText());
        try {
            if (Filter.getText().equals("and") || Filter.getText().equals("Filter")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Filtered2.clear();
            Filtered2.addAll(test2.getContainerFiltered());
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("ID");
        }
            if (Filter.getText().equals("or")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Cont.addAll(test2.getContainerFiltered());
            for (int i=0;i<Filtered2.size();i++){
                for (int j=0;j<Cont.size();j++){
                    if (!Filtered2.get(i).equals(Cont.get(j))){
                        Filtered2.add(Cont.get(j));
                    }
                }
            }
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("ID");
        }
            
            if (Filter.getText().equals("not")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Cont.addAll(test2.getContainerFiltered());
            for (int i=0;i<Filtered2.size();i++){
                for (int j=0;j<Cont.size();j++){
                    if (Filtered2.get(i).equals(Cont.get(j))){
                        Filtered2.remove(i);
                        i--;
                    }
                }
            }
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("ID");
        }
        
        
        } catch (ParseException ex) {
            Logger.getLogger(GuiKMLBase.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_DeviceFilterBottunActionPerformed

    private void DateFilterBottunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateFilterBottunActionPerformed
        // TODO add your handling code here:
            InputFilterGui test = new InputFilterGui (BDateFilter.getText(),BTimeFilter.getText(),EDateFilter.getText(),ETimeFilter.getText(),-1,-1,-1,-1,"");
        try {
                       if (Filter.getText().equals("and") || Filter.getText().equals("Filter")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Filtered2.clear();
            Filtered2.addAll(test2.getContainerFiltered());
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("TIME");
        }
            if (Filter.getText().equals("or")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Cont.addAll(test2.getContainerFiltered());
            for (int i=0;i<Filtered2.size();i++){
                for (int j=0;j<Cont.size();j++){
                    if (!Filtered2.get(i).equals(Cont.get(j))){
                        Filtered2.add(Cont.get(j));
                    }
                }
            }
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("TIME");
        }
            
            if (Filter.getText().equals("not")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Cont.addAll(test2.getContainerFiltered());
            for (int i=0;i<Filtered2.size();i++){
                for (int j=0;j<Cont.size();j++){
                    if (Filtered2.get(i).equals(Cont.get(j))){
                        Filtered2.remove(i);
                        i--;
                    }
                }
            }
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("TIME");
        }
        } catch (ParseException ex) {
            Logger.getLogger(GuiKMLBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DateFilterBottunActionPerformed

    private void LocationFilterBottunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationFilterBottunActionPerformed
        // TODO add your handling code here:
           InputFilterGui test = new InputFilterGui ("","","","",Double.parseDouble(LatFilter.getText()),Double.parseDouble(LonFilter.getText()),Double.parseDouble(AltFilter.getText()),Double.parseDouble(RadiusFilter.getText()),"");
        try {
            if (Filter.getText().equals("and") || Filter.getText().equals("Filter")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Filtered2.clear();
            Filtered2.addAll(test2.getContainerFiltered());
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("Location");
        }
            if (Filter.getText().equals("or")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Cont.addAll(test2.getContainerFiltered());
            for (int i=0;i<Filtered2.size();i++){
                for (int j=0;j<Cont.size();j++){
                    if (!Filtered2.get(i).equals(Cont.get(j))){
                        Filtered2.add(Cont.get(j));
                    }
                }
            }
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("Location");
        }
            
            if (Filter.getText().equals("not")){
            FilterGui test2 = new FilterGui(test,Filtered2);
            Cont.addAll(test2.getContainerFiltered());
            for (int i=0;i<Filtered2.size();i++){
                for (int j=0;j<Cont.size();j++){
                    if (Filtered2.get(i).equals(Cont.get(j))){
                        Filtered2.remove(i);
                        i--;
                    }
                }
            }
            Devices must = new Devices(Filtered2);
            Devices1.setText(must.getDevicescount()+"");
            Groups1.setText(Filtered2.size()+"");
            FilteredBy1.setText("Location");
        }
        } catch (ParseException ex) {
            Logger.getLogger(GuiKMLBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LocationFilterBottunActionPerformed

    private void FilteredFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilteredFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilteredFileActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        FilteredPath = FilteredFile.getText();
        ReaderAlg Test = new ReaderAlg(FilteredPath);
        FileFiltered Test2 = new FileFiltered(Test.getFileList());
       /* DevicesFiltered.setText(Test2.getDevicescount()+"");
        GroupsFiltered.setText(Test.getFileList().size()+"");
        FilteredByFiltered.setText("Top10Signal");*/
        ListFile Filtered = new ListFile(Test2.getContain().get(0),"SIGNAL",10);
        toFilter.addAll(Filtered.getContainerMAC());
        Filtered2.addAll(Filtered.getContainerMAC());
        RdyToPrint Exam = new RdyToPrint(toFilter,1);
        FileFiltered Exam2 = new FileFiltered(Exam.getTOPRINT());
        Devices.setText(Exam2.getDevicescount()+"");
        Groups.setText(toFilter.size()+"");
        FilteredBy.setText("Top10Signal");
    }//GEN-LAST:event_jButton13ActionPerformed

    private void BTimeFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTimeFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BTimeFilterActionPerformed

    private void EDateFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDateFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EDateFilterActionPerformed

    private void testActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testActionPerformed

    private void test2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_test2ActionPerformed

    private void DeviceFilterBottun1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeviceFilterBottun1ActionPerformed
        // TODO add your handling code here:
        RdyToPrint exam1 = new RdyToPrint(toFilter,1);
        FileFiltered check = new FileFiltered(exam1.getTOPRINT());
        ListFile exam = new ListFile(check.getContain().get(0),"MAC",3);
        Algorithm1 bla = new Algorithm1(exam.getContainerMAC());
        for (int i=0;i<bla.getALGOAFTER().size();i++){
           if (bla.getALGOAFTER().get(i).getMACList().get(0).equals(test.getText())){
                test2.setText(bla.getALGOAFTER().get(i).getLATList().get(0)+" "+bla.getALGOAFTER().get(i).getLONList().get(0)+" "+bla.getALGOAFTER().get(i).getALTList().get(0));
            }
        }
    }//GEN-LAST:event_DeviceFilterBottun1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String Save = "";
        Save = SaveLoc2.getText();
        RdyToPrint Printing = new RdyToPrint(toFilter,1);
        Writer FilteredFirst = new Writer(Save,Printing.getTOPRINT());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void SaveLoc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveLoc2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveLoc2ActionPerformed

    private void KML2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KML2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KML2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Kml3 a = new Kml3 (Filtered2,KML2.getText());
    }//GEN-LAST:event_jButton7ActionPerformed

    private void Devices1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Devices1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Devices1ActionPerformed

    private void Groups1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Groups1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Groups1ActionPerformed

    private void FilteredBy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilteredBy1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilteredBy1ActionPerformed

    private void DateFilterBottun1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateFilterBottun1ActionPerformed
        // TODO add your handling code here:
        Filtered2.clear();
        Filtered2.addAll(toFilter);
        Devices1.setText(Devices.getText());
        Groups1.setText(Filtered2.size()+"");
        FilteredBy1.setText("None");      
    }//GEN-LAST:event_DateFilterBottun1ActionPerformed

    private void SaveLoc4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveLoc4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveLoc4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
                FilteredPath = SaveLoc4.getText();
        ReaderAlg Test = new ReaderAlg(FilteredPath);
        FileFiltered Test2 = new FileFiltered(Test.getFileList());
       /* DevicesFiltered.setText(Test2.getDevicescount()+"");
        GroupsFiltered.setText(Test.getFileList().size()+"");
        FilteredByFiltered.setText("Top10Signal");*/
        ListFile Filtered = new ListFile(Test2.getContain().get(0),"SIGNAL",10);
        Filtered2.addAll(Filtered.getContainerMAC());
        RdyToPrint Exam = new RdyToPrint(Filtered2,1);
        FileFiltered Exam2 = new FileFiltered(Exam.getTOPRINT());
        Devices1.setText(Exam2.getDevicescount()+"");
        Groups1.setText(Filtered2.size()+"");
        FilteredBy1.setText("Top10Signal");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void test1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_test1ActionPerformed

    private void test3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_test3ActionPerformed

    private void DeviceFilterBottun2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeviceFilterBottun2ActionPerformed
        // TODO add your handling code here:
        ArrayList<String> test = new ArrayList<String>();
        test.add(test1.getText());
        FilteredContain Gain = new FilteredContain(test);
        Algorithm2 Gain2 = new Algorithm2 (Gain.getContain(),toFilter);
        test3.setText(Gain2.getALGOAFTER().get(0).getLATList().get(0)+" "+Gain2.getALGOAFTER().get(0).getLONList().get(0)+" "+Gain2.getALGOAFTER().get(0).getALTList().get(0));
        
    }//GEN-LAST:event_DeviceFilterBottun2ActionPerformed

    private void MAC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAC2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAC2ActionPerformed

    private void MAC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAC1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAC1ActionPerformed

    private void MAC3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAC3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAC3ActionPerformed

    private void DeviceFilterBottun3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeviceFilterBottun3ActionPerformed
        // TODO add your handling code here:
        int test=0;
        ArrayList<String> Tester = new ArrayList<String>();
        String contain="";
        if (!SIGNAL1.getText().equals("Signal") && !MAC1.getText().equals("MAC")){
            test++;
        }
               if (!SIGNAL2.getText().equals("Signal") && !MAC2.getText().equals("MAC")){
            test++;}
        
                   if (!SIGNAL3.getText().equals("Signal") && !MAC3.getText().equals("MAC")){
            test++;
        }
         contain = contain+""+","+""+","+0+","+0+","+0+","+test;
         if (test>0)
             contain = contain + ","+""+","+MAC1.getText()+","+0+SIGNAL1.getText();
         if (test>1)
             contain = contain + ","+""+","+MAC2.getText()+","+0+SIGNAL2.getText();
         if (test>2)
             contain = contain + ","+""+","+MAC3.getText()+","+0+SIGNAL3.getText();
         
         Tester.add(contain);
         FilteredContain Test2 = new FilteredContain(Tester);
         Algorithm2 Test3 = new Algorithm2(Test2.getContain(),toFilter);
         MAC4.setText(Test3.getALGOAFTER().get(0).getLATList().get(0)+" "+Test3.getALGOAFTER().get(0).getLONList().get(0)+" "+Test3.getALGOAFTER().get(0).getALTList().get(0));
         
    }//GEN-LAST:event_DeviceFilterBottun3ActionPerformed

    private void SIGNAL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGNAL1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SIGNAL1ActionPerformed

    private void SIGNAL2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGNAL2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_SIGNAL2ActionPerformed

    private void SIGNAL3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGNAL3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SIGNAL3ActionPerformed

    private void MAC4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAC4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MAC4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiKMLBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiKMLBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiKMLBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiKMLBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiKMLBase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AltFilter;
    private javax.swing.JTextField BDateFilter;
    private javax.swing.JTextField BTimeFilter;
    private javax.swing.JButton DateFilterBottun;
    private javax.swing.JButton DateFilterBottun1;
    private javax.swing.JTextField DeviceFilter;
    private javax.swing.JButton DeviceFilterBottun;
    private javax.swing.JButton DeviceFilterBottun1;
    private javax.swing.JButton DeviceFilterBottun2;
    private javax.swing.JButton DeviceFilterBottun3;
    private javax.swing.JTextField Devices;
    private javax.swing.JTextField Devices1;
    private javax.swing.JTextField EDateFilter;
    private javax.swing.JTextField ETimeFilter;
    private javax.swing.JTextField Filter;
    private javax.swing.JTextField FilteredBy;
    private javax.swing.JTextField FilteredBy1;
    private javax.swing.JTextField FilteredFile;
    private javax.swing.JTextField Folder;
    private javax.swing.JTextField Groups;
    private javax.swing.JTextField Groups1;
    private javax.swing.JTextField KML;
    private javax.swing.JTextField KML2;
    private javax.swing.JTextField LatFilter;
    private javax.swing.JButton LocationFilterBottun;
    private javax.swing.JTextField LonFilter;
    private javax.swing.JTextField MAC1;
    private javax.swing.JTextField MAC2;
    private javax.swing.JTextField MAC3;
    private javax.swing.JTextField MAC4;
    private javax.swing.JTextField RadiusFilter;
    private javax.swing.JTextField SIGNAL1;
    private javax.swing.JTextField SIGNAL2;
    private javax.swing.JTextField SIGNAL3;
    private javax.swing.JTextField SaveLoc;
    private javax.swing.JTextField SaveLoc2;
    private javax.swing.JTextField SaveLoc4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField test;
    private javax.swing.JTextField test1;
    private javax.swing.JTextField test2;
    private javax.swing.JTextField test3;
    // End of variables declaration//GEN-END:variables
}
